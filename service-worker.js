"use strict";var precacheConfig=[["/index.html","6fe99e7eb7df457b260ef14652974092"],["/static/css/main.8fded09d.css","6be32e9199d23879284d463419f3998b"],["/static/js/main.cff83624.js","22d908fbd4d244acb3c09ca66618d099"],["/static/media/Pinterest-Icon.888c5e49.png","888c5e49ac44fc34f572986c7b9d18c0"],["/static/media/awwwards.a2c119b1.jpg","a2c119b133d21b729ba0438bbe94f14c"],["/static/media/bootstrap.a83a1cec.jpg","a83a1cec44e016c9e3b1860d86963ea2"],["/static/media/dribbble.cae8c0ad.jpg","cae8c0ad9f2648a0b2df4675e4a225ca"],["/static/media/email.5c1ddca6.png","5c1ddca6df9f532758101de2c836c1fc"],["/static/media/github.3480db5e.png","3480db5eabd3ef35cf349caa44c5171e"],["/static/media/html5.1b03cfc0.png","1b03cfc0abb82ed3de564e2ab8cf01cb"],["/static/media/image_of_reso.c8ceed76.png","c8ceed765b7469a851f8d0d378e312dd"],["/static/media/javascript.0cded3a3.png","0cded3a3276425911d55a2552bf361bf"],["/static/media/jquery.2bd1ad12.jpg","2bd1ad12d4ba725d157ddf04340a6738"],["/static/media/linkedin.821cef1b.png","821cef1b30825336adced13ff9b9d95f"],["/static/media/materialize.fc9a8392.PNG","fc9a8392edc2d332451c10c2602a98dc"],["/static/media/mesnap.eab30a26.jpg","eab30a26f4f7f4e29bda3acf98a4602d"],["/static/media/mountains.58141c76.jpg","58141c7611179e8a1e1253c21052d917"],["/static/media/photoshop.fe175765.jpg","fe17576533caf2cde2ffc011af98c82c"],["/static/media/sass.a17ffd0c.png","a17ffd0ccfbaa56f1a792532668c315c"],["/static/media/tend_screen.6709fb2e.png","6709fb2e7623feed63585b6d1ed2f2a8"],["/static/media/xd.6613bf43.png","6613bf43faabae0796b906d9f3e32630"],["/static/media/xtensio.9f30ece0.png","9f30ece00e0c949c1862ba0c0f2889d3"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var c="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});